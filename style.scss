$distance-between-panel: 100px;
$panel-count: 4;
:root {
    --button-size: 50px;
}

.perspective-container {
    perspective: 90px;
    position: fixed;
    width: 100%; 
    height: 100%;
    transform-origin: center;
    transform-style: preserve-3d;
}
.perspective-menu {
    transform-style: preserve-3d;
    transform: rotateX(35deg);
}
.stick-bottom {
    position: fixed;
    bottom: 0;
    
}
.stick-center{
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
}
.bottom-navigation{
    background-color: grey;
    padding: 15px;
    border-radius: 8px;
    transform: translateY(15px) rotateX(35deg);
}
.stacked-panel {
  position: fixed;
  animation: move 3s linear infinite;
  animation-play-state: paused;
  animation-delay: calc(var(--scroll) * -1s);
  height: 100vh;
}

@keyframes move {
  to {
    transform: translateZ(-1 * $distance-between-panel * ($panel-count - 1.2) * 2);
  }
}
// .space {
//   left: calc(100vw/2.5);
// }
// .wrapper {
//   width: 150vw;
//   height: 150vh;
//   transform-style: preserve-3d;
//   transform-origin: center center;
// }
.background {
  position: absolute;
}


.bubble {
  position: fixed;
  //top: 0; left: 0; bottom: 0; right: 0;
  background: black;
  opacity: .7;
  border-radius: 50%;
  animation: move 3s linear infinite;
  animation-play-state: paused;
  animation-delay: calc(var(--scroll) * -1s);
  transform-origin: center center;
}


@for $i from 1 through 100 {
  .bubble:nth-child(#{$i}){
     $size: random(30)+px;
     height: $size;
     width: $size;
     //animation-delay: -$i * .2s;
     transform: translate3d((random(150) * 1vw),  (random(150) * 1vh), (random(600) * 1px));
     background: hsl(random(360) , 70%, 50%);
  }
} 

@for $i from 1 through $panel-count {
  .stacked-panel:nth-child(#{$i}){
      transform: translateZ(($i - 1) * $distance-between-panel);
  }
}

@for $i from 1 through $panel-count {
  .stacked-panel:nth-child(#{$i}){
      $temp: ($i - 1)/($panel-count - 1);
      opacity: calc(1 - ((#{$panel-count + 1} * (var(--scroll) - #{$temp})) * (#{$panel-count + 1} * (var(--scroll) - #{$temp}))));
      //opacity: calc((#{$i * $panel-count}/#{$panel-count - 1}) - #{$panel-count} * var(--scroll));
  }
}

 